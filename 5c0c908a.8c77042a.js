(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{107:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return y}));var n=r(0),o=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=o.a.createContext({}),l=function(e){var t=o.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=l(r),d=n,y=u["".concat(i,".").concat(d)]||u[d]||f[d]||c;return r?o.a.createElement(y,s(s({ref:t},p),{},{components:r})):o.a.createElement(y,s({ref:t},p))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,i=new Array(c);i[0]=d;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<c;p++)i[p]=r[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},82:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return a})),r.d(t,"default",(function(){return l}));var n=r(3),o=r(7),c=(r(0),r(107)),i={id:"info-lock-script",title:"Info Cell Lock Script"},s={unversionedId:"tx-script/info-lock-script",id:"tx-script/info-lock-script",isDocsHomePage:!1,title:"Info Cell Lock Script",description:"Rules 1 - Verify if lock.args is consistent with info type",source:"@site/docs/tx-script/info-lock-script.md",slug:"/tx-script/info-lock-script",permalink:"/gliaswap-docs/docs/tx-script/info-lock-script",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/tx-script/info-lock-script.md",version:"current",sidebar:"docs",previous:{title:"Info Cell Type Script",permalink:"/gliaswap-docs/docs/tx-script/info-type-script"},next:{title:"Swap Request Cell Lock Script",permalink:"/gliaswap-docs/docs/tx-script/swap-lock-script"}},a=[],p={toc:a};function l(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h4",{id:"rules-1---verify-if-lockargs-is-consistent-with-info-type"},"Rules 1 - Verify if lock.args is consistent with info type"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{}),"if count(self.lock.group_inputs) != 2\n    return fail\n\nlet info = group_inputs[0]\nlet pool = group_inputs[1]\nif hash(ckb | pool.type_hash) != self.lock.args[0..32]\n    || info.type_hash != self.lock.args[32..64]\n    return fail\n\nreturn success\n")))}l.isMDXComponent=!0}}]);