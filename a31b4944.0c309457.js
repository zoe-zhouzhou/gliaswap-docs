(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{117:function(e,t,i){"use strict";i.d(t,"a",(function(){return d})),i.d(t,"b",(function(){return y}));var l=i(0),r=i.n(l);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,l)}return i}function c(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function a(e,t){if(null==e)return{};var i,l,r=function(e,t){if(null==e)return{};var i,l,r={},n=Object.keys(e);for(l=0;l<n.length;l++)i=n[l],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)i=n[l],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var u=r.a.createContext({}),s=function(e){var t=r.a.useContext(u),i=t;return e&&(i="function"==typeof e?e(t):c(c({},t),e)),i},d=function(e){var t=s(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var i=e.components,l=e.mdxType,n=e.originalType,o=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(i),b=l,y=d["".concat(o,".").concat(b)]||d[b]||p[b]||n;return i?r.a.createElement(y,c(c({ref:t},u),{},{components:i})):r.a.createElement(y,c({ref:t},u))}));function y(e,t){var i=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=i.length,o=new Array(n);o[0]=b;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:l,o[1]=c;for(var u=2;u<n;u++)o[u]=i[u];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,i)}b.displayName="MDXCreateElement"},96:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return o})),i.d(t,"metadata",(function(){return c})),i.d(t,"toc",(function(){return a})),i.d(t,"default",(function(){return s}));var l=i(3),r=i(7),n=(i(0),i(117)),o={id:"pool-tx",sidebar_label:"Pool",title:"Pool transaction structure"},c={unversionedId:"tx-script-sudt/pool-tx",id:"tx-script-sudt/pool-tx",isDocsHomePage:!1,title:"Pool transaction structure",description:"In pool page\uff0cwhen Liquidity Providers\uff08LPs) mananger their liquidity, 5 types of transaction may be involved:",source:"@site/docs/tx-script-sudt/pool-tx.md",slug:"/tx-script-sudt/pool-tx",permalink:"/gliaswap-docs/docs/tx-script-sudt/pool-tx",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/tx-script-sudt/pool-tx.md",version:"current",sidebar_label:"Pool",sidebar:"docs",previous:{title:"Swap Transaction Structure",permalink:"/gliaswap-docs/docs/tx-script-sudt/swap-tx"},next:{title:"Info Cell Type Script",permalink:"/gliaswap-docs/docs/tx-script-sudt/info-type-script"}},a=[{value:"1. Creat a pool",id:"1-creat-a-pool",children:[{value:"Info type script",id:"info-type-script",children:[]}]},{value:"2. LPs submit add liquidity request",id:"2-lps-submit-add-liquidity-request",children:[]},{value:"3. LPs submit remove liquidity request",id:"3-lps-submit-remove-liquidity-request",children:[]},{value:"4. Aggregators match liquidity request with pool",id:"4-aggregators-match-liquidity-request-with-pool",children:[{value:"Info type script",id:"info-type-script-1",children:[]},{value:"Info lock script",id:"info-lock-script",children:[]},{value:"Liquidity request lock script",id:"liquidity-request-lock-script",children:[]},{value:"sUDT type script",id:"sudt-type-script",children:[]}]},{value:"5. LPs can cancel their own liquidity request",id:"5-lps-can-cancel-their-own-liquidity-request",children:[{value:"Liquidity request lock script",id:"liquidity-request-lock-script-1",children:[]}]}],u={toc:a};function s(e){var t=e.components,i=Object(r.a)(e,["components"]);return Object(n.b)("wrapper",Object(l.a)({},u,i,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"In pool page\uff0cwhen Liquidity Providers\uff08LPs) mananger their liquidity, 5 types of transaction may be involved:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Anyone can creat a pool"),Object(n.b)("li",{parentName:"ol"},"Liquidity Providers\uff08LPs) submit add liquidity request"),Object(n.b)("li",{parentName:"ol"},"Liquidity Providers\uff08LPs) submit remove liquidity request"),Object(n.b)("li",{parentName:"ol"},"Aggregators match liquidity request with pool to help LP to manager their liquidity sucessfully"),Object(n.b)("li",{parentName:"ol"},"Liquidity Providers\uff08LPs) cancel liquidity request")),Object(n.b)("h2",{id:"1-creat-a-pool"},"1. Creat a pool"),Object(n.b)("p",null,"Creat a pool actually is to creat info cell and pool cell: "),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"info cell used to store pool info, including reserve balance, Liquidity token balance and other ID info to indentify the pool"),Object(n.b)("li",{parentName:"ul"},"pool cell used to store the real asset")),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{}),"                                 info_cell\nany_free_ckb_cell    -------\x3e    pool_x_cell\n                                 pool_y_cell\n                                 change_cell\n")),Object(n.b)("p",null,"In this transaction,  Only info type script will be run to verify the tx."),Object(n.b)("h3",{id:"info-type-script"},"Info type script"),Object(n.b)("p",null,"Rule 4 - If this is a creating pool transaction, verify that two Pool cells is created at the same time as the Info cell, and that the data filled in info cell and pool cell are correct."),Object(n.b)("h2",{id:"2-lps-submit-add-liquidity-request"},"2. LPs submit add liquidity request"),Object(n.b)("p",null,"If a LP want to add liqidity to a pool, he/she needs to submit a add liquidity request firstly. For example\uff0cAlice want to add M CKB and N sUDT_A to pool:"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{}),"\nsUDT_A normal_cell   -------\x3e   sUDT_A liquidity_request_cell\nsUDT_B normal_cell              sUDT_B liquidity_request_cell\n\n")),Object(n.b)("p",null,"Notice that this transaction only validates regular SUDT rules constrained in sudt type script."),Object(n.b)("h2",{id:"3-lps-submit-remove-liquidity-request"},"3. LPs submit remove liquidity request"),Object(n.b)("p",null,"If a LP want to remove liquidity from a pool, he/she needs to submit a remove liquidity request firstly. For example\uff0cBob want to burn L Liquidity token and withdraw the "),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{}),"Bob liquidity token cell   ----\x3e   Bob remove liquidity request cell    \n")),Object(n.b)("p",null,"Notice that this transaction only validates regular SUDT rules constrained in sudt type script."),Object(n.b)("h2",{id:"4-aggregators-match-liquidity-request-with-pool"},"4. Aggregators match liquidity request with pool"),Object(n.b)("p",null,"Motivated by the Tip fee claimed in the liquidity request cell, aggregators will continually retrieve the liquidity request cells\uff08including add liquidity request and remove liquidity request\uff09 and the pool cells and then compete to match them off-chain and submit matching transactions."),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{}),"\ninfo_in_cell                            info_out_cell\npool_x_in_cell                          pool_x_out_cell\npool_y_in_cell                          pool_y_out_cell\n                          -------\x3e\nmatcher_in_cell                         matcher_out_ckb_cell\n\n[swap_request_cell]                     [sudt_swapped_cell\n                                       + ckb_change_cell]\n\n[ add_liquidity_x_cell                  [sudt_lp_cell\n+ add_liquidity_y_cell                 + sudt_change_cell\n                                       + ckb_change_cell]\n\n[remove_liquidity_cell]                 [sudt_x_cell\n                                       + sudt_y_cell]\n\n")),Object(n.b)("p",null,"In this transaction, four types of script will be run to verify the tx:"),Object(n.b)("h3",{id:"info-type-script-1"},"Info type script"),Object(n.b)("p",null,"Rule 5 - If this is initially adding liquidity, verify if minting the correct amount Liquidity token for user, and verify if the data storaged in info cell and pool cell is correct."),Object(n.b)("p",null,"Rule 6 - Intercept the liquidity request queue from inputs and outputs, and for each request cell\uff0cverifity if the actual pay amount and receive amount satisfy the request amount in the request cell. And update the sudt_x_reserve and sudt_y_reserve for following verification."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"If it is add liquidity request cell, verify if minting the correct amount Liquidity token for user, and add up the sUDT amount and Liquidity token amount for verifying info cell and pool cell later."),Object(n.b)("li",{parentName:"ul"},"If it is remove liquidity request cell, verify if withdraw the correct sudt amount for user, update the sUDT amount and Liquidity token amount for verifying info cell and pool cell later."),Object(n.b)("li",{parentName:"ul"},"Verify if the data changed in info cell and pool cell is correct ")),Object(n.b)("h3",{id:"info-lock-script"},"Info lock script"),Object(n.b)("p",null," Rules 1 - Verify if lock.args is consistent with info type and pool info "),Object(n.b)("h3",{id:"liquidity-request-lock-script"},"Liquidity request lock script"),Object(n.b)("p",null,"Rule 1 - verifity input index","[1]"," is info cell"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{}),"// First input cell must be info cell\nlet info_type_hash = self.lock.args[57..89]\nif inputs[0].type_hash[0..32] == info_type_hash\n    return success\n\nreuturn fail\n")),Object(n.b)("h3",{id:"sudt-type-script"},"sUDT type script"),Object(n.b)("p",null,Object(n.b)("a",Object(l.a)({parentName:"p"},{href:"https://talk.nervos.org/t/rfc-simple-udt-draft-spec/4333"}),"sUDT proposal")),Object(n.b)("h2",{id:"5-lps-can-cancel-their-own-liquidity-request"},"5. LPs can cancel their own liquidity request"),Object(n.b)("p",null,"Normally your will add liquidity or remove liquidity successfully soon after you submit the liquidity request, but if the price fluctuates above the slippage, your request will be pending until the pool price fluctuates back to the price you submitted."),Object(n.b)("p",null,"So we provide the cancel option for LPs. LPs can send a transaction to cancel their own liquidity request."),Object(n.b)("p",null,"For example, if Bob want to cancel his remove liqidity request:"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{}),"Bob remove liquidity request cell    ----\x3e   Bob liquidity token cell\n\n")),Object(n.b)("p",null,"This transaction leads to another rule of LIQUIDITY_REQ_LOCK"),Object(n.b)("h3",{id:"liquidity-request-lock-script-1"},"Liquidity request lock script"),Object(n.b)("p",null,"Rule 2 - If one of input cell in the transaction use user's lock specified in liquidity request cell args and the corresponding witness is not 0, unlock the request cell directly."))}s.isMDXComponent=!0}}]);