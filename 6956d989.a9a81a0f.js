(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{107:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return b}));var a=r(0),n=r.n(a);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=n.a.createContext({}),u=function(e){var t=n.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=u(e.components);return n.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},h=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(r),h=a,b=p["".concat(o,".").concat(h)]||p[h]||d[h]||i;return r?n.a.createElement(b,c(c({ref:t},l),{},{components:r})):n.a.createElement(b,c({ref:t},l))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},154:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/overview-d169dde07d1d1f57593d3c5357a978c5.png"},85:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return u}));var a=r(3),n=r(7),i=(r(0),r(107)),o={id:"overview",title:"Gliaswap Overview"},c={unversionedId:"product/overview",id:"product/overview",isDocsHomePage:!1,title:"Gliaswap Overview",description:"overview",source:"@site/docs/product/overview.md",slug:"/product/overview",permalink:"/gliaswap-docs/docs/product/overview",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/product/overview.md",version:"current",sidebar:"docs",previous:{title:"Introduction",permalink:"/gliaswap-docs/docs/"},next:{title:"Fee Structure",permalink:"/gliaswap-docs/docs/product/fee"}},s=[{value:"Network Actors",id:"network-actors",children:[{value:"Trader",id:"trader",children:[]},{value:"Liquidity Provider",id:"liquidity-provider",children:[]},{value:"Aggregator",id:"aggregator",children:[]},{value:"Cross-chain Relayer",id:"cross-chain-relayer",children:[]}]},{value:"AMM Algorithm",id:"amm-algorithm",children:[]}],l={toc:s};function u(e){var t=e.components,o=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("img",{alt:"overview",src:r(154).default})),Object(i.b)("h2",{id:"network-actors"},"Network Actors"),Object(i.b)("h3",{id:"trader"},"Trader"),Object(i.b)("p",null,"Trader is the entity who wants to swap one token to another token. "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"To make a swap between CKB and sUDT, traders need to submit a swap request firstly, and then Aggregators will help them to finish the swap. Traders also have the option to cancel their submitted swap request. ")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"        submit swap request             match request with pool\nTraders ------------------\x3e Aggragators -----------------------\x3e On-chain Verify\n                                               off-chain \n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"If this is a cross-chain swap, for example, using ETH to buy CKB, traders need to submit a tx to lock their ETH firstly, cross-chain relayer will help user to submit the swap request, and then Aggregators will help them to finish the swap. ")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"        lock ETH          submit swap request             match request with pool\nTraders --------\x3e Relayer ------------------\x3e Aggragators -----------------------\x3e On-chain Verify\n                                                              off-chain \n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Gliaswap also support user to cross their Ethereum asset to Nervos or cross back. Users only need to sign one tx to lock their assets or burn their assets, relayer will help them finish all the rest operation.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"        lock ETH            mint ckETH for Alice         \nAlice -----------\x3e Relayer -----------------------\x3e Nervos On-chain Verify\n                                 off-chain \n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"       burn ckETH            unlock ETH for David         \nDavid -----------\x3e Relayer -----------------------\x3e Ethereum Excute\n                                  \n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The user experience in UI are quite simple, just sign one transaction to make a swap. ")),Object(i.b)("h3",{id:"liquidity-provider"},"Liquidity Provider"),Object(i.b)("p",null,"Liquidity provider is the entity that contributes liquidity for this network. The liquidity provider can be any entity including individual users, traditional market maker, or some decentralized fund. Liquidity providers take on price risk and are compensated with fees."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"To add liquidity or remove liquidity, LPs need to submit a liquidity request firstly, and then Aggregators will help them to finish the operation. In first version, we only support sUDT/CKB pool. LPs also have the option to cancel their submitted liquidity request.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"    submit swap request             match request with pool\nLps ------------------\x3e Aggragators -----------------------\x3e On-chain Verify\n                                          off-chain \n")),Object(i.b)("h3",{id:"aggregator"},"Aggregator"),Object(i.b)("p",null,"Aggregators are the entity that help to match requests and pools. Working as the \u201csystem executors,\u201d aggregators retrieve the request cells and the pool cells on chain and then compete to match them off-chain and submit matching transactions. There are three types of work from which aggregators can gain profit."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"By matching swap request cell with pool cell, aggregators can get the tip fee from each swap request cell they matched. "),Object(i.b)("li",{parentName:"ul"},"By matching liquidity request cell with pool cell, aggregators can get the tip fee from each liquidity request cell they matched.")),Object(i.b)("p",null,"Anyone can become a Gliaswap aggregator and begin earning fees for every trade they facilitate. The winner in the race will get the trading commissions claimed in the order. However, the other aggregators don\u2019t suffer any losses, since CKB won\u2019t charge any fees for failed transactions."),Object(i.b)("h3",{id:"cross-chain-relayer"},"Cross-chain Relayer"),Object(i.b)("p",null,"The cross-chain relayer are responsible for transfer the message between Ethereum and Nervos and help user to cross chain. More cross-chain related info, please check ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/nervosnetwork/force-bridge-eth"}),"Force Bridge docs"),"."),Object(i.b)("h2",{id:"amm-algorithm"},"AMM Algorithm"),Object(i.b)("p",null,"Gliaswap is able to adopt many types of AMM algorithm to support different pool model. In the first version, we adopt uniswap AMM Algorithm as a special pool type. In this model, prices are set automatically using the constant product market maker mechanism, which keeps overall reserves in relative equilibrium. Anyone can become a liquidity provider for a pool by depositing an equivalent value of each underlying token in return for pool tokens. These tokens track pro-rata LP shares of the total reserves, and can be redeemed for the underlying assets at any time. For more explanation, you can check this ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://hackmd.io/@HaydenAdams/HJ9jLsfTz?type=view"}),"docs"),"."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"Although the AMM Algorithm is same with Uniswap, the mechanism have a big difference. More specifically, if a user want to add liquidity, firstly, he need to make a \u2018add liquidity\u2018 request by creating a request cell containing request info and pool info\uff0cand then aggregator will match this request with pool once their price get matched. ")))))}u.isMDXComponent=!0}}]);